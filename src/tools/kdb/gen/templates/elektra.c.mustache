/**
 * @file
 *
 * @brief
 *
 * @copyright BSD License (see doc/LICENSE.md or https://www.libelektra.org)
 */

// clang-format off
{{=/*% %*/=}}
// clang-format on

#include "/*% header_file %*/"

/*%# more_headers %*/
#include "/*% . %*/"
/*%/ more_headers %*/

#include <stdlib.h>
#include <string.h>

#include <kdbhelper.h>
#include <kdbinvoke.h>

#include <elektra/conversion.h>

/*%={{ }}=%*/
/**
 * Initializes an instance of Elektra for the application '{{{ parent_key }}}'.
 *
 * This MUST be called before anything was written to stdout, otherwise specload will fail.
 * If you have to write to stdout before calling this, you must handle the specload
 * communication yourself. You may use {{{ specload_function_name }}.
 *
 * @param elektra A reference to where the Elektra instance shall be stored.
 *                Has to be disposed of with elektraClose().
 * @param error   A reference to an ElektraError pointer. Will be passed to elektraOpen().
 *
 * @retval 0  on success, @p elektra will be set, @p error will be unchanged
 * @retval -1 on error, @p elektra will be unchanged, @p error will set
 * @retval 1  specload mode, exit as soon as possible and must DO NOT write anything to stdout,
 *            @p elektra and @p error are both unchanged
 * @retval 2  help mode, '-h' or '--help' was specified call {{{ help_function_name }}} and exit
 *            @p elektra and @p error are both unchanged
 *
 * @see elektraOpen
 */// {{=/*% %*/=}}
int /*%& init_function_name %*/ (Elektra ** elektra, ElektraError ** error)
{
	KeySet * defaults = /*%& defaults %*/;
	Elektra * e = elektraOpen ("/*% parent_key %*/", defaults, error);

	if (e == NULL)
	{
		return -1;
	}

	if (elektraGetBoolean (e, "/*% specload_name %*/"))
	{
		elektraClose (e);
		return /*%& specload_function_name %*/ ();
	}

	if (0 /* TODO: check if help mode */)
	{
		elektraClose (e);
		/*%& help_function_name %*/ ();
		return 2;
	}

	*elektra = e;
	return 0;
}

/**
 * Sends the specification over stdout in the format expected by specload.
 *
 * You MUST not output anything to stdout before or after invoking this function
 * and should exit as soon as possible after calling this function.
 *
 * @retval 1 on success
 * @retval -1 on error
 */
int /*%& specload_function_name %*/ (void)
{
	KeySet * spec = /*%& defaults %*/;

	Key * errorKey = keyNew (0, KEY_END);

	KeySet * specloadConf = ksNew (1, keyNew ("system/sendspec", KEY_END), KS_END);
	ElektraInvokeHandle * specload = elektraInvokeOpen ("specload", specloadConf, errorKey);

	int result = elektraInvoke2Args (specload, "sendspec", spec, NULL);

	elektraInvokeClose (specload, errorKey);
	keyDel (errorKey);
	ksDel (specloadConf);
	ksDel (spec);

	return result == ELEKTRA_PLUGIN_STATUS_SUCCESS ? 1 : -1;
}

/**
 * Outputs the help message
 */
void /*%& help_function_name %*/ (void)
{
	// TODO
}

/*%> partial.enum.c %*/

/*%> partial.struct.c %*/
