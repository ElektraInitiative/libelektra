// clang-format off
{{!
This template file is licensed under BSD Zero Clause License (0BSD).
For the full text see ./elektra/LICENSE.txt
}}
{{=/*% %*/=}}
// clang-format on
/**
 * @file
 *
 * This file was automatically generated using `kdb gen elektra`.
 * Any changes will be overwritten, when the file is regenerated.
 *
 * @copyright BSD Zero Clause License
 *
 *     Copyright (C) 2019 Elektra Initiative (https://libelektra.org)
 *
 *     Permission to use, copy, modify, and/or distribute this software for any
 *     purpose with or without fee is hereby granted.
 *
 *     THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
 *     REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND
 *     FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
 *     INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
 *     LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
 *     OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
 *     PERFORMANCE OF THIS SOFTWARE.
 */


#ifndef /*%& include_guard %*/
#define /*%& include_guard %*/

#ifdef __cplusplus
extern "C" {
#endif

#include <elektra.h>

#include <kdbhelper.h>
#include <string.h>

/*%# more_headers %*/
#include "/*% . %*/"
/*%/ more_headers %*/

/*%> partial.enum.decl.h %*/

/*%> partial.union.decl.h %*/

/*%> partial.struct.decl.h %*/

/*%> partial.keys.tags.h %*/

/*%> partial.keys.fun.h %*/

int /*%& init_function_name %*/ (Elektra ** elektra, ElektraError ** error);
void /*%& help_function_name %*/ (const char * usage, const char * prefix);
void /*%& specload_function_name %*/ (int argc, const char ** argv);

/*%={{ }}=%*/
/**
 * @param elektra The elektra instance initialized with {{{ init_function_name }}}().
 * @param tag     The tag to look up.
 *
 * @return The value stored at the given key.
 */// {{=/*% %*/=}}
#define elektraGet(elektra, tag) ELEKTRA_GET (tag) (elektra)

/*%={{ }}=%*/
/**
 * @param elektra The elektra instance initialized with {{{ init_function_name }}}().
 * @param tag     The tag to look up.
 * @param ...     Variable arguments depending on the given tag.
 *
 * @return The value stored at the given key.
 */// {{=/*% %*/=}}
#define elektraGetV(elektra, tag, ...) ELEKTRA_GET (tag) (elektra, __VA_ARGS__)

/*%={{ }}=%*/
/**
 * @param elektra The elektra instance initialized with {{{ init_function_name }}}().
 * @param tag     The tag to look up.
 * @param result  Points to the struct into which results will be stored.
 */// {{=/*% %*/=}}
#define elektraFillStruct(elektra, result, tag) ELEKTRA_GET (tag) (elektra, result)

/*%={{ }}=%*/
/**
 * @param elektra The elektra instance initialized with {{{ init_function_name }}}().
 * @param result  Points to the struct into which results will be stored.
 * @param tag     The tag to look up.
 * @param ...     Variable arguments depending on the given tag.
 */// {{=/*% %*/=}}
#define elektraFillStructV(elektra, result, tag, ...) ELEKTRA_GET (tag) (elektra, result, __VA_ARGS__)

/*%={{ }}=%*/
/**
 * @param elektra The elektra instance initialized with the {{{ init_function_name }}}().
 * @param tag     The tag to write to.
 * @param value   The new value.
 * @param error   Pass a reference to an ElektraError pointer.
 */// {{=/*% %*/=}}
#define elektraSet(elektra, tag, value, error) ELEKTRA_SET (tag) (elektra, value, error)

/*%={{ }}=%*/
/**
 * @param elektra The elektra instance initialized with the {{{ init_function_name }}}().
 * @param tag     The tag to write to.
 * @param value   The new value.
 * @param error   Pass a reference to an ElektraError pointer.
 * @param ...     Variable arguments depending on the given tag.
 */// {{=/*% %*/=}}
#define elektraSetV(elektra, tag, value, error, ...) ELEKTRA_SET (tag) (elektra, value, __VA_ARGS__, error)

/*%={{ }}=%*/
/**
 * @param elektra The elektra instance initialized with {{{ init_function_name }}}().
 * @param tag     The array tag to look up.
 *
 * @return The size of the array below the given key.
 */// {{=/*% %*/=}}
#define elektraSize(elektra, tag) ELEKTRA_SIZE (tag) (elektra)

/*%={{ }}=%*/
/**
 * @param elektra The elektra instance initialized with {{{ init_function_name }}}().
 * @param tag     The array tag to look up.
 * @param ...     Variable arguments depending on the given tag.
 *
 * @return The size of the array below the given key.
 */// {{=/*% %*/=}}
#define elektraSizeV(elektra, tag, ...) ELEKTRA_SIZE (tag) (elektra, __VA_ARGS__)

#ifdef __cplusplus
}
#endif

#endif // /*%& include_guard %*/
