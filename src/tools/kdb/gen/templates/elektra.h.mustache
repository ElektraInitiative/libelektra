/**
 * @file
 *
 * @brief
 *
 * @copyright BSD License (see doc/LICENSE.md or https://www.libelektra.org)
 */

// clang-format off
{{=/*% %*/=}}

#ifndef /*%& include_guard %*/
#define /*%& include_guard %*/

#include <elektra.h>

/*%# more_headers %*/
#include "/*% . %*/"
/*%/ more_headers %*/

/*%# enums %*/
/*%# generate_typedef? %*/
typedef enum
{
	/*%# values %*/
	/*%& name %*/ = /*%& value %*/,
	/*%/ values %*/
} /*%& native_type %*/;
/*%/ generate_typedef? %*/
/*%/ enums %*/

// enum conversion functions
/*%# enums %*/
int /*%& from_key %*/ (const Key * key, /*%& native_type %*/ * variable);
char * /*%& to_string %*/ (/*%& native_type %*/ value);
/*%/ enums %*/

/*%# enums %*/
ELEKTRA_TAG_DECLARATIONS (/*%& native_type %*/, /*%& type_name %*/)
/*%/ enums %*/

/*%# structs %*/
/*%# generate_typedef? %*/
typedef struct
{
	/*%# fields %*/
	/*%& native_type %*/ /*%& name %*/;
	/*%/ fields %*/
} /*%& native_type %*/;
/*%/ generate_typedef? %*/
/*%/ structs %*/

/*%# structs %*/
void /*%& getter %*/ (Elektra * elektra, const char * keyname, /*%& native_type %*/ * result);
void /*%& setter %*/ (Elektra * elektra, const char * keyname, const /*%& native_type %*/ * value, ElektraError * error);
/*%/ structs %*/

/*%# keys %*/
/*%={{ }}=%*/
/**
 * Tag value for key '{{{ name }}}'.
 */{{=/*% %*/=}}
ELEKTRA_TAG_VALUE (/*%& tag_name %*/, "/*% name %*/", /*%& type_name %*/)
/*%/ keys %*/;

Elektra * /*%& init_function_name %*/ (ElektraError ** error);

#endif // /*%& include_guard %*/
