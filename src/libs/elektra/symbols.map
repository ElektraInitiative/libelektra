libelektra_0.8 {
	# kdbmodule.h
	elektraModulesClose;
	elektraModulesInit;
	elektraModulesLoad;

	# plugin loading:
	elektraPluginClose;
	elektraPluginGetFunction;
	elektraPluginOpen;

	# kdbhelper.h
	elektraCalloc;
	elektraFormat;
	elektraFree;
	elektraMalloc;
	elektraMemCaseCmp;
	elektraMemDup;
	elektraRealloc;
	elektraStrCaseCmp;
	elektraStrCmp;
	elektraStrDup;
	elektraStrLen;
	elektraStrNCaseCmp;
	elektraStrNCmp;
	elektraVFormat;
	elektraWriteArrayNumber;

	# kdbease.h
	keyCompare;
	keyCompareMeta;

	# kdb.h
	## KDB functions
	kdbClose;
	kdbGet;
	kdbOpen;
	kdbSet;

	## Key functions
	keyAddBaseName;
	keyAddName;
	keyBaseName;
	keyClear;
	keyCmp;
	keyCopy;
	keyCopyAllMeta;
	keyCopyMeta;
	keyDecRef;
	keyDel;
	keyDup;
	keyGetBaseName;
	keyGetBaseNameSize;
	keyGetBinary;
	keyGetMeta;
	keyGetName;
	keyGetNameSize;
	keyGetNamespace;
	keyGetRef;
	keyGetString;
	keyGetUnescapedNameSize;
	keyGetValueSize;
	keyIncRef;
	keyIsBelow;
	keyIsBelowOrSame;
	keyIsBinary;
	keyIsDirectlyBelow;
	keyIsString;
	keyName;
	keyNew;
	keyNextMeta;
	keySetBaseName;
	keySetBinary;
	keySetMeta;
	keySetName;
	keySetString;
	keyString;
	keyUnescapedName;
	keyValue;
	keyVNew;

	## KeySet functions
	ksAppend;
	ksAppendKey;
	ksAtCursor;
	ksClear;
	ksClose;
	ksCopy;
	ksCopyInternal;
	ksCurrent;
	ksCut;
	ksDeepDup;
	ksDel;
	ksDup;
	ksGetAlloc;
	ksGetCursor;
	ksGetSize;
	ksInit;
	ksLookup;
	ksLookupByName;
	ksNew;
	ksNext;
	ksPop;
	ksResize;
	ksRewind;
	ksSetCursor;
	ksVNew;
};

libelektra_1.0 {
	# kdberrors.h
	ELEKTRA_ERROR_CONFLICTING_STATE;
	ELEKTRA_ERROR_INSTALLATION;
	ELEKTRA_ERROR_INTERFACE;
	ELEKTRA_ERROR_INTERNAL;
	ELEKTRA_ERROR_OUT_OF_MEMORY;
	ELEKTRA_ERROR_PLUGIN_MISBEHAVIOR;
	ELEKTRA_ERROR_RESOURCE;
	ELEKTRA_ERROR_VALIDATION_SEMANTIC;
	ELEKTRA_ERROR_VALIDATION_SYNTACTIC;

	ELEKTRA_WARNING_CONFLICTING_STATE;
	ELEKTRA_WARNING_INSTALLATION;
	ELEKTRA_WARNING_INTERFACE;
	ELEKTRA_WARNING_INTERNAL;
	ELEKTRA_WARNING_OUT_OF_MEMORY;
	ELEKTRA_WARNING_PLUGIN_MISBEHAVIOR;
	ELEKTRA_WARNING_RESOURCE;
	ELEKTRA_WARNING_VALIDATION_SEMANTIC;
	ELEKTRA_WARNING_VALIDATION_SYNTACTIC;

	# kdb.h
	elektraGOptsContract;
	elektraGOptsContractFromStrings;

	## Key functions
	keyIsLocked;
	keyLock;
	keyMeta;

	## KeySet functions
	ksSearch;
	ksIncRef;
	ksDecRef;
	ksGetRef;

	# kdbchangetracking.h
	elektraChangeTrackingGetContextFromKdb;
	elektraChangeTrackingGetContextFromPlugin;
	elektraChangeTrackingCalculateDiff;

	# kdbdiff.h
	elektraDiffCalculate;
	elektraDiffIsEmpty;
	elektraDiffGetParentKey;
	elektraDiffDel;
	elektraDiffIncRef;
	elektraDiffDecRef;
	elektraDiffGetRef;
	elektraDiffGetAddedKeys;
	elektraDiffGetRemovedKeys;
	elektraDiffGetModifiedKeys;
	elektraDiffKeyValueChanged;
	elektraDiffKeyOnlyMetaChanged;
	elektraDiffGetAddedMetaKeys;
	elektraDiffGetRemovedMetaKeys;
	elektraDiffGetModifiedMetaKeys;


};

libelektraprivate_1.0 {
	# kdbprivate.h
	elektraAbort;
	elektraKeyNameCanonicalize;
	elektraKeyNameEscapePart;
	elektraKeyNameUnescape;
	elektraKeyNameValidate;
	elektraKsPopAtCursor;
	elektraFindInternalNotificationPlugin;
	elektraPluginMissing;
	elektraPluginVersion;
	elektraRenameKeys;
	keyIsDir;
	keyIsProc;
	keyIsSpec;
	keyIsSystem;
	keyIsUser;
	keySetNamespace;
	keySetRaw;
	ksRenameKeys;
	ksSearchInternal;
	keyDetachKeyName;

	ksRename;
	keyReplacePrefix;
	ksFindHierarchy;

	ksBelow;

	elektraIsArrayPart;

	# TODO [new_backend]: should be removed, tests should depend differently on this
	backendsDivide;

	elektraDiffNew;
	elektraChangeTrackingCreateContextForTesting;
	elektraChangeTrackingContextDel;

	# kdblogger.h
	elektraLog;

	# kdbrand.h
	elektraRand;
	elektraRandGetInitSeed;

	# kdberrors.h
	elektraSetErrorCONFLICTING_STATE;
	elektraSetErrorINSTALLATION;
	elektraSetErrorINTERFACE;
	elektraSetErrorINTERNAL;
	elektraSetErrorOUT_OF_MEMORY;
	elektraSetErrorPLUGIN_MISBEHAVIOR;
	elektraSetErrorRESOURCE;
	elektraSetErrorVALIDATION_SEMANTIC;
	elektraSetErrorVALIDATION_SYNTACTIC;

	elektraAddWarningCONFLICTING_STATE;
	elektraAddWarningINSTALLATION;
	elektraAddWarningINTERFACE;
	elektraAddWarningINTERNAL;
	elektraAddWarningOUT_OF_MEMORY;
	elektraAddWarningPLUGIN_MISBEHAVIOR;
	elektraAddWarningRESOURCE;
	elektraAddWarningVALIDATION_SEMANTIC;
	elektraAddWarningVALIDATION_SYNTACTIC;

	elektraErrorSpecification;
	elektraTriggerError;
	elektraTriggerWarnings;
};
