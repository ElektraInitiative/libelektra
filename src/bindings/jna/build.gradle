plugins {
	// dependency versions (task: dependencyUpdates)
	//	https://github.com/ben-manes/gradle-versions-plugin
	id 'com.github.ben-manes.versions' version "$versionsPluginVersion"

	// maven publish plugin
	id 'maven-publish'

	// nexus publish plugin
	id 'io.github.gradle-nexus.publish-plugin' version "$nexusPublishPluginVersion"
}

allprojects {
	version = project.properties['releaseVersion'] ?: 'SNAPSHOT'
	group = 'org.libelektra'
}

nexusPublishing {
	repositories {
		sonatype {
			nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
			snapshotRepositoryUrl = uri("https://s01.oss.sonatype.org/content/repositories/snapshots/")
			username = project.properties['sonatypeUsername'] ?: 'SONATYPE_USER_NAME_NOT_CONFIGURED'
			password = project.properties['sonatypePassword'] ?: 'SONATYPE_USER_PASSWORD_NOT_CONFIGURED'
		}
	}
}

// apply optional version information override
File versionSettings = new File(rootProject.projectDir, 'version-settings.gradle')
if (versionSettings.exists()) {
	apply from: versionSettings
}

allprojects {
	ext {
		isReleaseVersion = !project.version.contains("SNAPSHOT")
	}
}

// log task graph
gradle.taskGraph.whenReady {taskGraph ->
	logger.lifecycle("Building Elektra Java bindings version: ${rootProject.version}")
	logger.lifecycle("Is release version: ${rootProject.isReleaseVersion}")
	logger.lifecycle("Found task graph: $taskGraph")
	logger.lifecycle("Found ${taskGraph.allTasks.size()} tasks.")
	taskGraph.allTasks.forEach { task ->
		logger.lifecycle("$task")
		task.dependsOn.forEach { dep ->
			logger.lifecycle("  - $dep")
		}
	}
	if (rootProject.version == 'undefined' || rootProject.version == '0.9.4-1') {
		throw new GradleException("Version '${rootProject.version}' is blacklisted. see https://issues.sonatype.org/browse/OSSRH-66930")
	}
}
