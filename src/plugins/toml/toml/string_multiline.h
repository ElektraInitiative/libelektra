// clang-format off
ksNew (16,
	keyNew (PREFIX "/multiline_basic_leading_newline",
		ELEKTRA_KEY_VALUE, "This string should be in a single line",
		ELEKTRA_KEY_META, "origvalue", "\nThis string should be in a single line",
		ELEKTRA_KEY_META, "tomltype", "string_ml_basic",
		ELEKTRA_KEY_META, "type", "string",
		ELEKTRA_KEY_META, "order", "0",
	ELEKTRA_KEY_END),
	keyNew (PREFIX "/multiline_basic_lineending_newlines",
		ELEKTRA_KEY_VALUE, "This string should also be in a single line",
		ELEKTRA_KEY_META, "origvalue", "\nThis \\\nstring \\\nshould \\\nalso \\\nbe \\\nin \\\na \\\nsingle \\\nline",
		ELEKTRA_KEY_META, "tomltype", "string_ml_basic",
		ELEKTRA_KEY_META, "type", "string",
		ELEKTRA_KEY_META, "order", "1",
	ELEKTRA_KEY_END),
	keyNew (PREFIX "/multiline_literal_leading_newline",
		ELEKTRA_KEY_VALUE, "Single line string",
		ELEKTRA_KEY_META, "origvalue", "\nSingle line string",
		ELEKTRA_KEY_META, "tomltype", "string_ml_literal",
		ELEKTRA_KEY_META, "type", "string",
		ELEKTRA_KEY_META, "order", "2",
	ELEKTRA_KEY_END),
	keyNew (PREFIX "/multiline_literal_linending_newlines",
		ELEKTRA_KEY_VALUE, "Multi \\\nline \\\nstring",
		ELEKTRA_KEY_META, "origvalue", "\nMulti \\\nline \\\nstring",
		ELEKTRA_KEY_META, "tomltype", "string_ml_literal",
		ELEKTRA_KEY_META, "type", "string",
		ELEKTRA_KEY_META, "order", "3",
	ELEKTRA_KEY_END),
	keyNew (PREFIX "/another_single_ling_string",
		ELEKTRA_KEY_VALUE, "The quick brown fox jumps over the lazy dog.",
		ELEKTRA_KEY_META, "origvalue", "\nThe quick brown \\\n\n\n  fox jumps over \\\n      the lazy dog.",
		ELEKTRA_KEY_META, "tomltype", "string_ml_basic",
		ELEKTRA_KEY_META, "type", "string",
		ELEKTRA_KEY_META, "order", "4",
	ELEKTRA_KEY_END),
	keyNew (PREFIX "/multiline_with_terminators",
			ELEKTRA_KEY_VALUE, " ' '' ",
		ELEKTRA_KEY_META, "tomltype", "string_ml_literal",
		ELEKTRA_KEY_META, "type", "string",
		ELEKTRA_KEY_META, "order", "5",
	ELEKTRA_KEY_END),

ELEKTRA_KS_END)
