# Stein auf Stein
key : value
hello : world
Plain Scalar: 'Single Quoted'
Simple:
key2: # comment
a:
  b: c
d:
  e: f
  g:
    h
primes:
  -
    two
  -
    three
  -
    five
  -
    seven
list:
 - one
 - two
 - three
mixed:
 # comment
 - "bla" : blubb # comment
 - # comment
   - hello # comment
   # comment
  # comment
 # comment
They Might Be Giants: # comment
  "Don‚Äôt Let‚Äôs Start" # comment
  # comment
bullet_char: '-'
command_case: lower
line_ending: unix
line_width: 140
max_subargs_per_line: 1
separate_ctrl_name_with_space: True
separate_fn_name_with_space: True
tab_size: 8

additional_commands:

  add_gtest:
    flags:
      - MEMLEAK
      - KDBTESTS
      - NO_MAIN
      - LINK_TOOLS
    kwargs:
      INCLUDE_DIRECTORIES: +
      LINK_LIBRARIES: +
      LINK_ELEKTRA: +
      SOURCES: +

  add_plugin:
    flags:
      - CPP
      - ADD_TEST
      - CPP_TEST
      - INSTALL_TEST_DATA
      - TEST_README
      - ONLY_SHARED
    kwargs:
      COMPILE_DEFINITIONS: +
      DEPENDS: +
      INCLUDE_DIRECTORIES: +
      INCLUDE_SYSTEM_DIRECTORIES: 1
      LINK_ELEKTRA: +
      LINK_LIBRARIES: +
      OBJECT_SOURCES: +
      SOURCES: +
      TEST_ENVIRONMENT: +
      TEST_REQUIRED_PLUGINS: +

  add_plugintest:
    flags:
      - MEMLEAK
      - INSTALL_TEST_DATA
      - CPP
    kwargs:
      INCLUDE_SYSTEM_DIRECTORIES: 1
      COMPILE_DEFINITIONS: +
      ENVIRONMENT: +
      INCLUDE_DIRECTORIES: +
      LINK_LIBRARIES: +
      LINK_ELEKTRA: +
      TEST_LINK_LIBRARIES: +
      TEST_LINK_ELEKTRA: +
      LINK_PLUGIN: +
      WORKING_DIRECTORY: +
      TIMEOUT: 1

  download_project:
    kwargs:
      PROJ: 1
      GIT_REPOSITORY: 1
      GIT_TAG: 1
language: cpp
dist: xenial
osx_image: xcode10.1

cache:
  directories:
    - $HOME/.m2
    - $HOME/.cabal
    - $HOME/elektra-cabal-sandbox
    - $HOME/Library/Caches/Homebrew

# don't cache our own libraries generated in the build
# so they always get rebuilt properly and to avoid init issues
# we ignore the result as some or all might not exist on build
# errors, in that case unregister would fail
before_cache:
  - rm -rf $HOME/.cabal/logs
  - cd $HOME/elektra-cabal-sandbox
  - cabal sandbox hc-pkg unregister spectranslator > /dev/null; true
  - cabal sandbox hc-pkg unregister specelektra > /dev/null; true
  - cabal sandbox hc-pkg unregister libfa > /dev/null; true
  - cabal sandbox hc-pkg unregister libelektra-haskell > /dev/null; true
  - rm -rf .cabal-sandbox/logs
  - rm -f .cabal-sandbox/world
  - rm -f .cabal-sandbox/add-source-timestamps

#
# Define the build matrix
#
matrix:
  include:

    # ASAN: Enable AddressSanitizer

    - os: linux
      name: üêß GCC ASAN
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
      env:
        - ENABLE_ASAN=ON
        - CC_COMPILER=gcc-8
        - CXX_COMPILER=g++-8
        # Build less stuff so the build does not hit the timeout limit that often
        - TOOLS=kdb
        - BINDINGS=cpp
