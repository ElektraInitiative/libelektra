.\" generated with Ronn-NG/v0.10.1
.\" http://github.com/apjanke/ronn-ng/tree/0.10.1.pre3
.TH "KDB\-META\-SHOW" "1" "March 2023" ""
.SH "NAME"
\fBkdb\-meta\-show\fR \- Print all metakeys along with their value
.SH "SYNOPSIS"
\fBkdb meta show <key name>\fR
.br
.P
Where \fBkey name\fR is the name of the key the user would like to access\.
.SH "DESCRIPTION"
This command is used to print all metakeys and its values for a given key\. A metakey is information stored in a key which describes that key\.
.P
The handling of cascading \fBkey name\fR does not differ to \fBkdb get\fR\. Make sure to use the namespace \fBspec\fR, if you want metadata from there\.
.SH "RETURN VALUES"
This command will return the following values as an exit status:
.br
.TP
0
No errors\.
.TP
1
Key not found\. (Invalid \fBpath\fR)
.SH "OPTIONS"
.TP
\fB\-H\fR, \fB\-\-help\fR
Show the man page\.
.TP
\fB\-V\fR, \fB\-\-version\fR
Print version info\.
.TP
\fB\-p\fR, \fB\-\-profile <profile>\fR
Use a different kdb profile\.
.TP
\fB\-C\fR, \fB\-\-color <when>\fR
Print never/auto(default)/always colored output\.
.TP
\fB\-v\fR, \fB\-\-verbose\fR
Explain what is happening\. Prints additional information in case of errors/warnings\.
.TP
\fB\-d\fR, \fB\-\-debug\fR
Give debug information\. Prints additional debug information in case of errors/warnings\.
.SH "RETURN VALUES"
This command will return the following values as an exit status:
.br
.TP
0
No errors\.
.TP
11
Key not found\.
.SH "EXAMPLES"
.nf
# Backup\-and\-Restore: user:/tests/examples

# We use `dump` as storage format here
sudo kdb mount ls\.ecf user:/tests/examples dump

# Create the keys we use for the examples
kdb set user:/tests/examples/kdb\-meta\-show test
kdb meta set user:/tests/examples/kdb\-meta\-show meta1 val1
kdb meta set user:/tests/examples/kdb\-meta\-show meta2 val2
kdb meta set user:/tests/examples/kdb\-meta\-show meta3 val3
kdb meta set user:/tests/examples/kdb\-meta\-show meta4 val4

# list all meta keys for /tests/examples/kdb\-meta\-show
kdb meta show /tests/examples/kdb\-meta\-show
#> meta1: val1
#> meta2: val2
#> meta3: val3
#> meta4: val4

kdb rm \-r user:/tests/examples
sudo kdb umount user:/tests/examples
.fi
.SH "SEE ALSO"
.IP "\(bu" 4
How to set metadata: kdb\-meta\-set(1) \fIkdb\-meta\-set\.md\fR
.IP "\(bu" 4
For more about cascading keys see elektra\-cascading(7) \fIelektra\-cascading\.md\fR
.IP "\(bu" 4
elektra\-metadata(7) \fIelektra\-metadata\.md\fR for an explanation of the metadata concepts\.
.IP "\(bu" 4
elektra\-key\-names(7) \fIelektra\-key\-names\.md\fR for an explanation of key names\.
.IP "" 0

