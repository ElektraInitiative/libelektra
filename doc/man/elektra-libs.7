.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "ELEKTRA\-LIBS" "7" "October 2017" "" ""
.
.SH "NAME"
\fBelektra\-libs\fR \- libs overview
.
.SH "DESCRIPTION"
Since version \fB0\.8\.15 \fI/doc/decisions/library_split\.md\fR\fR \fBlibelektra \fIelektra/\fR\fR is split into following libraries:
.
.P
.
.SS "Loader"
\fBloader \fIloader/\fR\fR contains source files that implement the plugin loader functionality\. The files are linked to \fBlibelektra \fIelektra/\fR\fR\.
.
.SS "Libease"
.
.nf

libelektra\-ease\.so
.
.fi
.
.P
\fBlibease \fIease/\fR\fR contains data\-structure operations on top of libcore which do not depend on internals\. Applications and plugins can choose to not link against it if they want to stay minimal\.
.
.SS "Libplugin"
.
.nf

libelektra\-plugin\.so
.
.fi
.
.P
\fBlibplugin \fIplugin/\fR\fR contains \fBelektraPlugin*\fR symbols and plugins should link against it\.
.
.SS "Libproposal"
.
.nf

libelektra\-proposal\.so
.
.fi
.
.P
\fBlibproposal \fIproposal/\fR\fR contains functions that are proposed for libcore\. Depends on internas of libcore and as such must always fit to the exact same version\.
.
.SS "Libmeta"
.
.nf

libelektra\-meta\.so
.
.fi
.
.P
\fBlibmeta \fImeta/meta\.c\fR\fR contains metadata operations as described in \fBMETADATA\.ini \fI/doc/METADATA\.ini\fR\fR\. Will be code\-generated in the future, so methods should be mechanical reflections of the contents in \fBMETADATA\.ini \fI/doc/METADATA\.ini\fR\fR\.
.
.SS "Libcore"
.
.nf

libelektra\-core\.so
<kdbhelper\.h>
<kdb\.h> (key* and ks*)
.
.fi
.
.P
Contains the fundamental data\-structures every participant of Elektra needs to link against\. It should be the only part that access the internal data structures\.
.
.SS "Libtools"
\fBlibtools \fItools/\fR\fR is a high\-level C++ shared\-code for tools\. It includes:
.
.IP "\(bu" 4
plugin interface
.
.IP "\(bu" 4
backend interface
.
.IP "\(bu" 4
3\-way merge
.
.IP "" 0
.
.SS "Utility"
\fBlibutility \fIutility/\fR\fR provides utility functions to be used in plugins\.
.
.SS "Libinvoke"
.
.nf

libelektra\-invoke\.so
.
.fi
.
.P
\fBlibinvoke \fIinvoke/\fR\fR provides a simple API allowing us to call functions exported by plugins\.
